# name: Build and Push to ECR

# on:
#   push:
#     branches: [ main ]

# jobs:
#   build-and-push:
#     name: Build and Push to ECR
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3
      
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}
        
#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1
#       with:
#         registry-type: public
        
#     - name: Build, tag, and push image to Amazon ECR
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         ECR_REPOSITORY: johnkponyo_url-shortener
#         IMAGE_TAG: latest
#       run: |
#         # Build the Docker image
#         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
        
#         # Push the Docker image to ECR
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
#         # Tag with commit SHA for versioning
#         docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::8}
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::8}
        
#         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        
#     - name: Image digest
#       run: echo ${{ steps.build-and-push.outputs.digest }}